// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twitter/twitter.proto

//package  proto;

package Twitter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TwitterRequest struct {
	ConsumerKey          string   `protobuf:"bytes,1,opt,name=consumerKey,proto3" json:"consumerKey,omitempty"`
	ConsumerSecret       string   `protobuf:"bytes,2,opt,name=consumerSecret,proto3" json:"consumerSecret,omitempty"`
	AccessToken          string   `protobuf:"bytes,3,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessSecret         string   `protobuf:"bytes,4,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitterRequest) Reset()         { *m = TwitterRequest{} }
func (m *TwitterRequest) String() string { return proto.CompactTextString(m) }
func (*TwitterRequest) ProtoMessage()    {}
func (*TwitterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c10c7b3c458180e, []int{0}
}

func (m *TwitterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitterRequest.Unmarshal(m, b)
}
func (m *TwitterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitterRequest.Marshal(b, m, deterministic)
}
func (m *TwitterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitterRequest.Merge(m, src)
}
func (m *TwitterRequest) XXX_Size() int {
	return xxx_messageInfo_TwitterRequest.Size(m)
}
func (m *TwitterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TwitterRequest proto.InternalMessageInfo

func (m *TwitterRequest) GetConsumerKey() string {
	if m != nil {
		return m.ConsumerKey
	}
	return ""
}

func (m *TwitterRequest) GetConsumerSecret() string {
	if m != nil {
		return m.ConsumerSecret
	}
	return ""
}

func (m *TwitterRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TwitterRequest) GetAccessSecret() string {
	if m != nil {
		return m.AccessSecret
	}
	return ""
}

func (m *TwitterRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type TwitterReply struct {
	// string tweet = 1;
	Tweet                []byte   `protobuf:"bytes,1,opt,name=tweet,proto3" json:"tweet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitterReply) Reset()         { *m = TwitterReply{} }
func (m *TwitterReply) String() string { return proto.CompactTextString(m) }
func (*TwitterReply) ProtoMessage()    {}
func (*TwitterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c10c7b3c458180e, []int{1}
}

func (m *TwitterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitterReply.Unmarshal(m, b)
}
func (m *TwitterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitterReply.Marshal(b, m, deterministic)
}
func (m *TwitterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitterReply.Merge(m, src)
}
func (m *TwitterReply) XXX_Size() int {
	return xxx_messageInfo_TwitterReply.Size(m)
}
func (m *TwitterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitterReply.DiscardUnknown(m)
}

var xxx_messageInfo_TwitterReply proto.InternalMessageInfo

func (m *TwitterReply) GetTweet() []byte {
	if m != nil {
		return m.Tweet
	}
	return nil
}

func init() {
	proto.RegisterType((*TwitterRequest)(nil), "Twitter.TwitterRequest")
	proto.RegisterType((*TwitterReply)(nil), "Twitter.TwitterReply")
}

func init() { proto.RegisterFile("twitter/twitter.proto", fileDescriptor_2c10c7b3c458180e) }

var fileDescriptor_2c10c7b3c458180e = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x8d, 0xda, 0xaa, 0xe3, 0xd2, 0xc3, 0x60, 0x35, 0x78, 0x2a, 0x41, 0xc4, 0xd3, 0x2a,
	0x7a, 0xf7, 0xea, 0x41, 0xf0, 0xb0, 0xed, 0x0b, 0x68, 0xf8, 0x85, 0xc5, 0xb5, 0x59, 0x93, 0xa9,
	0x65, 0xdf, 0xcc, 0xc7, 0x93, 0x4d, 0xa2, 0xec, 0xea, 0x29, 0xf9, 0xbe, 0xf9, 0xf9, 0x19, 0x86,
	0xe6, 0xb2, 0xad, 0x45, 0xe0, 0xaf, 0xf3, 0x5b, 0xb6, 0xde, 0x89, 0xe3, 0x83, 0x55, 0x42, 0xf3,
	0xa5, 0x68, 0x96, 0xff, 0x15, 0x3e, 0x36, 0x08, 0xc2, 0x0b, 0x3a, 0xb6, 0x6e, 0x1d, 0x36, 0xef,
	0xf0, 0x8f, 0xe8, 0xb4, 0x5a, 0xa8, 0xab, 0xa3, 0x6a, 0xa8, 0xf8, 0x92, 0x66, 0x3f, 0xb8, 0x84,
	0xf5, 0x10, 0xbd, 0x1b, 0x43, 0x7f, 0x6c, 0xdf, 0xf4, 0x6c, 0x2d, 0x42, 0x58, 0xb9, 0x37, 0xac,
	0xf5, 0x5e, 0x6a, 0x1a, 0x28, 0x36, 0x54, 0x24, 0xcc, 0x3d, 0xfb, 0x31, 0x32, 0x72, 0x7c, 0x4a,
	0xd3, 0xd7, 0xba, 0x11, 0x78, 0x3d, 0x89, 0xd3, 0x4c, 0xe6, 0x82, 0x8a, 0xdf, 0xcd, 0xdb, 0xa6,
	0xe3, 0x13, 0x9a, 0xc8, 0x16, 0x90, 0xb8, 0x71, 0x51, 0x25, 0xb8, 0x7d, 0xea, 0x53, 0x80, 0x2c,
	0xe1, 0x3f, 0x6b, 0x0b, 0xbe, 0xa7, 0xc3, 0x07, 0x48, 0x54, 0x7c, 0x56, 0xe6, 0x82, 0x72, 0x7c,
	0x82, 0xf3, 0xf9, 0xff, 0x41, 0xdb, 0x74, 0x66, 0xe7, 0x46, 0xbd, 0x4c, 0xe3, 0x01, 0xef, 0xbe,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x77, 0xb5, 0xf1, 0x5a, 0x59, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TweetServiceClient is the client API for TweetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TweetServiceClient interface {
	GetTweet(ctx context.Context, in *TwitterRequest, opts ...grpc.CallOption) (TweetService_GetTweetClient, error)
}

type tweetServiceClient struct {
	cc *grpc.ClientConn
}

func NewTweetServiceClient(cc *grpc.ClientConn) TweetServiceClient {
	return &tweetServiceClient{cc}
}

func (c *tweetServiceClient) GetTweet(ctx context.Context, in *TwitterRequest, opts ...grpc.CallOption) (TweetService_GetTweetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TweetService_serviceDesc.Streams[0], "/Twitter.TweetService/GetTweet", opts...)
	if err != nil {
		return nil, err
	}
	x := &tweetServiceGetTweetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TweetService_GetTweetClient interface {
	Recv() (*TwitterReply, error)
	grpc.ClientStream
}

type tweetServiceGetTweetClient struct {
	grpc.ClientStream
}

func (x *tweetServiceGetTweetClient) Recv() (*TwitterReply, error) {
	m := new(TwitterReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TweetServiceServer is the server API for TweetService service.
type TweetServiceServer interface {
	GetTweet(*TwitterRequest, TweetService_GetTweetServer) error
}

// UnimplementedTweetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTweetServiceServer struct {
}

func (*UnimplementedTweetServiceServer) GetTweet(req *TwitterRequest, srv TweetService_GetTweetServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTweet not implemented")
}

func RegisterTweetServiceServer(s *grpc.Server, srv TweetServiceServer) {
	s.RegisterService(&_TweetService_serviceDesc, srv)
}

func _TweetService_GetTweet_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TwitterRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TweetServiceServer).GetTweet(m, &tweetServiceGetTweetServer{stream})
}

type TweetService_GetTweetServer interface {
	Send(*TwitterReply) error
	grpc.ServerStream
}

type tweetServiceGetTweetServer struct {
	grpc.ServerStream
}

func (x *tweetServiceGetTweetServer) Send(m *TwitterReply) error {
	return x.ServerStream.SendMsg(m)
}

var _TweetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Twitter.TweetService",
	HandlerType: (*TweetServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTweet",
			Handler:       _TweetService_GetTweet_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "twitter/twitter.proto",
}
